package wlang

const (
	// Control Flow Instructions
	CodeBlockNameBlock       = "block"
	CodeBlockNameLoop        = "loop"
	CodeBlockNameBr          = "br"
	CodeBlockNameBrIf        = "br_if"
	CodeBlockNameBrTable     = "br_table"
	CodeBlockNameIf          = "if"
	CodeBlockNameThen        = "then"
	CodeBlockNameElse        = "else"
	CodeBlockNameEnd         = "end"
	CodeBlockNameReturn      = "return"
	CodeBlockNameUnreachable = "unreachable"

	// Basic Instructions
	CodeBlockNameNop          = "nop"
	CodeBlockNameDrop         = "drop"
	CodeBlockNameI32Const     = "i32.const"
	CodeBlockNameI64Const     = "i64.const"
	CodeBlockNameF32Const     = "f32.const"
	CodeBlockNameF64Const     = "f64.const"
	CodeBlockNameGetLocal     = "local.get"
	CodeBlockNameSetLocal     = "local.set"
	CodeBlockNameTeeLocal     = "local.tee"
	CodeBlockNameGetGlobal    = "global.get"
	CodeBlockNameSetGlobal    = "global.set"
	CodeBlockNameSelect       = "select"
	CodeBlockNameCall         = "call"
	CodeBlockNameCallIndirect = "call_indirect"

	// Integer Arithmetic Instructions
	CodeBlockNameI32Add    = "i32.add"
	CodeBlockNameI64Add    = "i64.add"
	CodeBlockNameI32Sub    = "i32.sub"
	CodeBlockNameI64Sub    = "i64.sub"
	CodeBlockNameI32Mul    = "i32.mul"
	CodeBlockNameI64Mul    = "i64.mul"
	CodeBlockNameI32DivS   = "i32.div_s"
	CodeBlockNameI64DivS   = "i64.div_s"
	CodeBlockNameI32DivU   = "i32.div_u"
	CodeBlockNameI64DivU   = "i64.div_u"
	CodeBlockNameI32RemS   = "i32.rem_s"
	CodeBlockNameI64RemS   = "i64.rem_s"
	CodeBlockNameI32RemU   = "i32.rem_u"
	CodeBlockNameI64RemU   = "i64.rem_u"
	CodeBlockNameI32And    = "i32.and"
	CodeBlockNameI64And    = "i64.and"
	CodeBlockNameI32Or     = "i32.or"
	CodeBlockNameI64Or     = "i64.or"
	CodeBlockNameI32Xor    = "i32.xor"
	CodeBlockNameI64Xor    = "i64.xor"
	CodeBlockNameI32Shl    = "i32.shl"
	CodeBlockNameI64Shl    = "i64.shl"
	CodeBlockNameI32ShrS   = "i32.shr_s"
	CodeBlockNameI64ShrS   = "i64.shr_s"
	CodeBlockNameI32ShrU   = "i32.shr_u"
	CodeBlockNameI64ShrU   = "i64.shr_u"
	CodeBlockNameI32Rotl   = "i32.rotl"
	CodeBlockNameI64Rotl   = "i64.rotl"
	CodeBlockNameI32Rotr   = "i32.rotr"
	CodeBlockNameI64Rotr   = "i64.rotr"
	CodeBlockNameI32Clz    = "i32.clz"
	CodeBlockNameI64Clz    = "i64.clz"
	CodeBlockNameI32Ctz    = "i32.ctz"
	CodeBlockNameI64Ctz    = "i64.ctz"
	CodeBlockNameI32Popcnt = "i32.popcnt"
	CodeBlockNameI64Popcnt = "i64.popcnt"
	CodeBlockNameI32Eqz    = "i32.eqz"
	CodeBlockNameI64Eqz    = "i64.eqz"

	// Floating-Point Arithmetic Instructions
	CodeBlockNameF32Div      = "f32.div"
	CodeBlockNameF64Div      = "f64.div"
	CodeBlockNameF32Sqrt     = "f32.sqrt"
	CodeBlockNameF64Sqrt     = "f64.sqrt"
	CodeBlockNameF32Min      = "f32.min"
	CodeBlockNameF64Min      = "f64.min"
	CodeBlockNameF32Max      = "f32.max"
	CodeBlockNameF64Max      = "f64.max"
	CodeBlockNameF32Ceil     = "f32.ceil"
	CodeBlockNameF64Ceil     = "f64.ceil"
	CodeBlockNameF32Floor    = "f32.floor"
	CodeBlockNameF64Floor    = "f64.floor"
	CodeBlockNameF32Trunc    = "f32.trunc"
	CodeBlockNameF64Trunc    = "f64.trunc"
	CodeBlockNameF32Nearest  = "f32.nearest"
	CodeBlockNameF64Nearest  = "f64.nearest"
	CodeBlockNameF32Abs      = "f32.abs"
	CodeBlockNameF64Abs      = "f64.abs"
	CodeBlockNameF32Neg      = "f32.neg"
	CodeBlockNameF64Neg      = "f64.neg"
	CodeBlockNameF32Copysign = "f32.copysign"
	CodeBlockNameF64Copysign = "f64.copysign"

	// Integer Comparison Instructions
	CodeBlockNameI32Eq  = "i32.eq"
	CodeBlockNameI64Eq  = "i64.eq"
	CodeBlockNameI32Ne  = "i32.ne"
	CodeBlockNameI64Ne  = "i64.ne"
	CodeBlockNameI32LtS = "i32.lt_s"
	CodeBlockNameI64LtS = "i64.lt_s"
	CodeBlockNameI32LtU = "i32.lt_u"
	CodeBlockNameI64LtU = "i64.lt_u"
	CodeBlockNameI32LeS = "i32.le_s"
	CodeBlockNameI64LeS = "i64.le_s"
	CodeBlockNameI32LeU = "i32.le_u"
	CodeBlockNameI64LeU = "i64.le_u"
	CodeBlockNameI32GtS = "i32.gt_s"
	CodeBlockNameI64GtS = "i64.gt_s"
	CodeBlockNameI32GtU = "i32.gt_u"
	CodeBlockNameI64GtU = "i64.gt_u"
	CodeBlockNameI32GeS = "i32.ge_s"
	CodeBlockNameI64GeS = "i64.ge_s"
	CodeBlockNameI32GeU = "i32.ge_u"
	CodeBlockNameI64GeU = "i64.ge_u"

	// Floating-Point Comparison Instructions
	CodeBlockNameF32Lt = "f32.lt"
	CodeBlockNameF64Lt = "f64.lt"
	CodeBlockNameF32Le = "f32.le"
	CodeBlockNameF64Le = "f64.le"
	CodeBlockNameF32Gt = "f32.gt"
	CodeBlockNameF64Gt = "f64.gt"
	CodeBlockNameF32Ge = "f32.ge"
	CodeBlockNameF64Ge = "f64.ge"

	// Conversion Instructions
	CodeBlockNameWrapI64        = "i32.wrap_i64"
	CodeBlockNameExtendI32S     = "i64.extend_i32_s"
	CodeBlockNameExtendI32U     = "i64.extend_i32_u"
	CodeBlockNameTruncI32F32S   = "i32.trunc_f32_s"
	CodeBlockNameTruncI32F64S   = "i32.trunc_f64_s"
	CodeBlockNameTruncI64F32S   = "i64.trunc_f32_s"
	CodeBlockNameTruncI64F64S   = "i64.trunc_f64_s"
	CodeBlockNameTruncI32F32U   = "i32.trunc_f32_u"
	CodeBlockNameTruncI32F64U   = "i32.trunc_f64_u"
	CodeBlockNameTruncI64F32U   = "i64.trunc_f32_u"
	CodeBlockNameTruncI64F64U   = "i64.trunc_f64_u"
	CodeBlockNameDemoteF64      = "f32.demote_f64"
	CodeBlockNamePromoteF32     = "f64.promote_f32"
	CodeBlockNameConvertF32I32S = "f32.convert_i32_s"
	CodeBlockNameConvertF32I64S = "f32.convert_i64_s"
	CodeBlockNameConvertF64I32S = "f64.convert_i32_s"
	CodeBlockNameConvertF64I64S = "f64.convert_i64_s"
	CodeBlockNameConvertF32I32U = "f32.convert_i32_u"
	CodeBlockNameConvertF32I64U = "f32.convert_i64_u"
	CodeBlockNameConvertF64I32U = "f64.convert_i32_u"
	CodeBlockNameConvertF64I64U = "f64.convert_i64_u"
	CodeBlockNameReinterpretF32 = "i32.reinterpret_f32"
	CodeBlockNameReinterpretF64 = "i64.reinterpret_f64"
	CodeBlockNameReinterpretI32 = "f32.reinterpret_i32"
	CodeBlockNameReinterpretI64 = "f64.reinterpret_i64"
	CodeBlockNameExtendI32I8S   = "i32.extend8_s"
	CodeBlockNameExtendI32I16S  = "i32.extend16_s"
	CodeBlockNameExtendI64I8S   = "i64.extend8_s"
	CodeBlockNameExtendI64I16S  = "i64.extend16_s"
	CodeBlockNameExtendI64I32S  = "i64.extend32_s"

	// Load And Store Instructions
	CodeBlockNameI32Load     = "i32.load"
	CodeBlockNameI64Load     = "i64.load"
	CodeBlockNameF32Load     = "f32.load"
	CodeBlockNameF64Load     = "f64.load"
	CodeBlockNameLoadI32I8S  = "i32.load8_s"
	CodeBlockNameLoadI32I16S = "i32.load16_s"
	CodeBlockNameLoadI64I8S  = "i64.load8_s"
	CodeBlockNameLoadI64I16S = "i64.load16_s"
	CodeBlockNameLoadI64I32S = "i64.load32_s"
	CodeBlockNameLoadI32I8U  = "i32.load8_u"
	CodeBlockNameLoadI32I16U = "i32.load16_u"
	CodeBlockNameLoadI64I8U  = "i64.load8_u"
	CodeBlockNameLoadI64I16U = "i64.load16_u"
	CodeBlockNameLoadI64I32U = "i64.load32_u"
	CodeBlockNameI32Store    = "i32.store"
	CodeBlockNameI64Store    = "i64.store"
	CodeBlockNameF32Store    = "f32.store"
	CodeBlockNameF64Store    = "f64.store"
	CodeBlockNameStoreI32I8  = "i32.store8"
	CodeBlockNameStoreI32I16 = "i32.store16"
	CodeBlockNameStoreI64I8  = "i64.store8"
	CodeBlockNameStoreI64I16 = "i64.store16"
	CodeBlockNameStoreI64I32 = "i64.store32"

	// Additional Memory-Related Instructions
	CodeBlockNameGrowMemory    = "memory.grow"
	CodeBlockNameCurrentMemory = "memory.size"
)

type CodeBlockType string

const (
	I32 CodeBlockType = "i32"
	I64 CodeBlockType = "i64"
	F32 CodeBlockType = "f32"
	F64 CodeBlockType = "f64"
	Any CodeBlockType = "any"
)

var (
	TillEndInstructions = []string{CodeBlockNameBlock, CodeBlockNameLoop}
	CallInstructions    = []string{CodeBlockNameCall, CodeBlockNameCallIndirect}
)
